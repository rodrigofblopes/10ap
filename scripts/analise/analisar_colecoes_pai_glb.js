// Script para analisar cole√ß√µes pai no modelo GLB arquitet√¥nico
// Execute este script no console do navegador ap√≥s carregar o modelo 3D

console.log('üîç ===== AN√ÅLISE DE COLE√á√ïES PAI GLB ARQUITET√îNICO =====');

// Verificar se a scene est√° dispon√≠vel
if (typeof window !== 'undefined' && window.sceneArquitetura) {
  const scene = window.sceneArquitetura;
  console.log('‚úÖ Scene arquitet√¥nica encontrada:', scene);
  
  // Analisar hierarquia completa
  const colecoesPai = {};
  const elementosPorColecao = {};
  const todosElementos = [];
  
  scene.traverse((child) => {
    if (child.name && child.name.trim() !== '') {
      todosElementos.push(child.name);
      
      // Identificar cole√ß√µes pai (padr√£o: X.Y)
      const colecaoPaiMatch = child.name.match(/^(\d+\.\d+)$/);
      if (colecaoPaiMatch) {
        const nomeColecao = child.name;
        colecoesPai[nomeColecao] = child;
        console.log(`üìÅ COLEC√á√ÉO PAI ENCONTRADA: "${nomeColecao}"`);
      }
      
      // Identificar elementos que pertencem a cole√ß√µes pai
      // Procurar por padr√µes como: Parede_b√°sica_Alvenaria_cer√¢mica_-_15cm_2618265
      if (child.name.includes('Parede_b√°sica_Alvenaria_cer√¢mica') || 
          child.name.includes('Piso_Laje_revestida') ||
          child.name.includes('Revestimento') ||
          child.name.includes('Forro') ||
          child.name.includes('Esquadria') ||
          child.name.includes('Pintura') ||
          child.name.includes('Instalacao')) {
        
        // Tentar identificar a qual cole√ß√£o pai pertence
        // Baseado no padr√£o de nomenclatura
        let colecaoPai = null;
        if (child.name.includes('Parede_b√°sica_Alvenaria_cer√¢mica')) {
          colecaoPai = '1.1'; // PAREDES
        } else if (child.name.includes('Piso_Laje_revestida')) {
          colecaoPai = '1.2'; // PISO
        } else if (child.name.includes('Revestimento')) {
          colecaoPai = '1.3'; // REVESTIMENTO PAREDES
        } else if (child.name.includes('Forro')) {
          colecaoPai = '1.4'; // FORRO
        } else if (child.name.includes('Esquadria')) {
          colecaoPai = '1.5'; // ESQUADRIAS
        } else if (child.name.includes('Pintura')) {
          colecaoPai = '1.6'; // PINTURA
        } else if (child.name.includes('Instalacao_Hidraulica')) {
          colecaoPai = '1.7'; // INSTALA√á√ïES HIDR√ÅULICAS
        } else if (child.name.includes('Instalacao_Eletrica')) {
          colecaoPai = '1.8'; // INSTALA√á√ïES EL√âTRICAS
        } else if (child.name.includes('Instalacao_Sanitaria')) {
          colecaoPai = '1.9'; // INSTALA√á√ïES SANIT√ÅRIAS
        } else if (child.name.includes('Instalacao_Gas')) {
          colecaoPai = '1.10'; // INSTALA√á√ïES DE G√ÅS
        } else if (child.name.includes('Servico_Complementar')) {
          colecaoPai = '1.11'; // SERVI√áOS COMPLEMENTARES
        }
        
        if (colecaoPai) {
          if (!elementosPorColecao[colecaoPai]) {
            elementosPorColecao[colecaoPai] = [];
          }
          elementosPorColecao[colecaoPai].push(child.name);
        }
      }
    }
  });
  
  console.log('üìä ===== RESULTADOS DA AN√ÅLISE =====');
  console.log(`üìä Total de elementos encontrados: ${todosElementos.length}`);
  console.log(`üìä Total de cole√ß√µes pai encontradas: ${Object.keys(colecoesPai).length}`);
  console.log('üìä Cole√ß√µes pai:', Object.keys(colecoesPai));
  
  console.log('üìä ===== ELEMENTOS POR COLEC√á√ÉO PAI =====');
  Object.keys(elementosPorColecao).forEach(colecao => {
    console.log(`üìÅ ${colecao}: ${elementosPorColecao[colecao].length} elementos`);
    console.log(`   Primeiros 5:`, elementosPorColecao[colecao].slice(0, 5));
  });
  
  // Gerar mapeamento para CSV
  console.log('üìã ===== MAPEAMENTO PARA CSV =====');
  const mapeamentoCSV = {};
  Object.keys(elementosPorColecao).forEach(colecao => {
    mapeamentoCSV[colecao] = elementosPorColecao[colecao].join(',');
    console.log(`${colecao}: ${elementosPorColecao[colecao].length} elementos`);
  });
  
  // Expor resultados globalmente
  window.colecoesPaiArquitetura = colecoesPai;
  window.elementosPorColecaoArquitetura = elementosPorColecao;
  window.mapeamentoCSVArquitetura = mapeamentoCSV;
  
  console.log('‚úÖ Resultados expostos globalmente:');
  console.log('   - window.colecoesPaiArquitetura');
  console.log('   - window.elementosPorColecaoArquitetura');
  console.log('   - window.mapeamentoCSVArquitetura');
  
} else {
  console.log('‚ùå Scene arquitet√¥nica n√£o encontrada!');
  console.log('   Certifique-se de que o modelo 3D foi carregado e a scene est√° exposta como window.sceneArquitetura');
}